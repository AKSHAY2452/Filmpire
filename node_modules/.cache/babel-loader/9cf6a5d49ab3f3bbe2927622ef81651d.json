{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Downloads\\\\filmpire-l2-forked\\\\src\\\\components\\\\MovieInformation\\\\MovieInformation.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Modal, Typography, Button, ButtonGroup, Grid, Box, CircularProgress, useMediaQuery, Rating } from \"@mui/material\";\nimport { Movie as MovieIcon, Theaters, Language, PlusOne, Favorite, FavoriteBorderOutlined, Remove, ArrowBack } from \"@mui/icons-material\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport selectGenreOrCategory from \"../../features/currentGenreOrCategory\";\nimport { useGetMovieQuery, useGetRecommendationsQuery } from \"../../services/TMDB\";\nimport useStyles from \"./styles\";\nimport genreIcons from \"../../assets/genres\";\nimport { MovieList } from \"..\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieInformation = () => {\n  _s();\n\n  var _data$genres;\n\n  const {\n    id\n  } = useParams();\n  const {\n    data,\n    isFetching,\n    error\n  } = useGetMovieQuery(id);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const {\n    data: recommendations,\n    isFetching: isRecommendationsFetching\n  } = useGetRecommendationsQuery({\n    list: \"/recommendations\",\n    movie_id: id\n  });\n  const isMovieFavorited = true;\n  const isMovieWatchlisted = true;\n\n  const addToFavorites = () => {};\n\n  const addToWatchlist = () => {};\n\n  if (isFetching) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: \"8rem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Something is wrong, Go back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: classes.containerSpaceAround,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      sm: 12,\n      lg: 4,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: classes.poster,\n        src: `https://image.tmdb.org/t/p/w500/${data === null || data === void 0 ? void 0 : data.poster_path}`,\n        alt: data === null || data === void 0 ? void 0 : data.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      direction: \"column\",\n      lg: 7,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        align: \"center\",\n        gutterBottom: \"true\",\n        children: [data === null || data === void 0 ? void 0 : data.title, \" (\", data.release_date.split(\"-\")[0], \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        align: \"center\",\n        gutterBottom: \"true\",\n        children: data === null || data === void 0 ? void 0 : data.tagline\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        className: classes.containerSpaceAround,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Rating, {\n            readOnly: true,\n            value: data.vote_average / 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h9\",\n            gutterBottom: \"true\",\n            style: {\n              marginleft: \"10px\"\n            },\n            children: [data === null || data === void 0 ? void 0 : data.vote_average, \" / 10\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          align: \"center\",\n          gutterBottom: \"true\",\n          children: [data === null || data === void 0 ? void 0 : data.runtime, \"min | Language: \", data === null || data === void 0 ? void 0 : data.spoken_languages[0].name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        className: classes.genresContainer,\n        children: data === null || data === void 0 ? void 0 : (_data$genres = data.genres) === null || _data$genres === void 0 ? void 0 : _data$genres.map(genre => /*#__PURE__*/_jsxDEV(Link, {\n          className: classes.links,\n          to: \"/\",\n          onClick: () => dispatch(selectGenreOrCategory(genre.id)),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: genreIcons[genre.name.toLowerCase()],\n            className: classes.genreImage,\n            height: 30\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textPrimary\",\n            variant: \"subtitle1\",\n            children: genre === null || genre === void 0 ? void 0 : genre.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)]\n        }, genre.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        style: {\n          marginTop: \"10px\"\n        },\n        children: \"Overview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        style: {\n          marginBottom: \"2rem\"\n        },\n        children: data === null || data === void 0 ? void 0 : data.overview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"Top Cast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        spacing: 2,\n        children: data && data.credits.cast.map((character, i) => character.profile_path && /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          md: 2,\n          component: Link,\n          to: `/actors/${character.id}`,\n          style: {\n            textDecoration: \"none\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: classes.castImage,\n            src: `https://image.tmdb.org/t/p/w500/${character.profile_path}`,\n            alt: character.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textPrimary\",\n            children: character === null || character === void 0 ? void 0 : character.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textSecondary\",\n            children: character.character.split(\"/\")[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 23\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)).slice(0, 6)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        style: {\n          marginTop: \"2rem\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.buttonsContainer,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            className: classes.buttonsContainer,\n            children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n              size: \"small\",\n              variant: \"outlined\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                href: data === null || data === void 0 ? void 0 : data.homepage,\n                endIcon: /*#__PURE__*/_jsxDEV(Language, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 98\n                }, this),\n                children: \"Website\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                href: `https://www.imdb.com/title/${data === null || data === void 0 ? void 0 : data.imdb_id}`,\n                endIcon: /*#__PURE__*/_jsxDEV(MovieIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 129\n                }, this),\n                children: \"IMDB\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => {},\n                href: \"#\",\n                endIcon: /*#__PURE__*/_jsxDEV(Theaters, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 62\n                }, this),\n                children: \"Trailer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            className: classes.buttonsContainer,\n            children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n              size: \"small\",\n              variant: \"outlined\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: addToFavorites,\n                endIcon: isMovieFavorited ? /*#__PURE__*/_jsxDEV(FavoriteBorderOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 78\n                }, this) : /*#__PURE__*/_jsxDEV(Favorite, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 107\n                }, this),\n                children: isMovieFavorited ? \"Unfavorite\" : \"Favorite\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: addToWatchlist,\n                endIcon: isMovieWatchlisted ? /*#__PURE__*/_jsxDEV(Remove, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 80\n                }, this) : /*#__PURE__*/_jsxDEV(PlusOne, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 93\n                }, this),\n                children: \"Watchlist\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                endIcon: /*#__PURE__*/_jsxDEV(ArrowBack, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 34\n                }, this),\n                sx: {\n                  borderColor: \"primary.main\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  style: {\n                    textDecoration: \"none\"\n                  },\n                  component: Link,\n                  to: \"/\",\n                  color: \"inherit\",\n                  variant: \"subtitle2\",\n                  children: \"Back\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      marginTop: \"5rem\",\n      width: \"100%\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        align: \"center\",\n        children: \"You Might Also Like\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), recommendations ? /*#__PURE__*/_jsxDEV(MovieList, {\n        movies: recommendations,\n        numberOfMovies: 12\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 28\n      }, this) : /*#__PURE__*/_jsxDEV(Box, {\n        children: \"SORRY, NOTHING WAS FOUND \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 89\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MovieInformation, \"dgGLAQsX7cjMSjnYanaO7q3ML1Q=\", false, function () {\n  return [useParams, useGetMovieQuery, useStyles, useDispatch, useGetRecommendationsQuery];\n});\n\n_c = MovieInformation;\nexport default MovieInformation;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieInformation\");","map":{"version":3,"sources":["C:/Users/HP/Downloads/filmpire-l2-forked/src/components/MovieInformation/MovieInformation.jsx"],"names":["React","Modal","Typography","Button","ButtonGroup","Grid","Box","CircularProgress","useMediaQuery","Rating","Movie","MovieIcon","Theaters","Language","PlusOne","Favorite","FavoriteBorderOutlined","Remove","ArrowBack","Link","useParams","useDispatch","useSelector","axios","selectGenreOrCategory","useGetMovieQuery","useGetRecommendationsQuery","useStyles","genreIcons","MovieList","MovieInformation","id","data","isFetching","error","classes","dispatch","recommendations","isRecommendationsFetching","list","movie_id","isMovieFavorited","isMovieWatchlisted","addToFavorites","addToWatchlist","containerSpaceAround","poster","poster_path","title","release_date","split","tagline","vote_average","marginleft","runtime","spoken_languages","name","genresContainer","genres","map","genre","links","toLowerCase","genreImage","marginTop","marginBottom","overview","credits","cast","character","i","profile_path","textDecoration","castImage","slice","buttonsContainer","homepage","imdb_id","borderColor"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Modal, Typography, Button, ButtonGroup, Grid, Box, CircularProgress, useMediaQuery, Rating } from \"@mui/material\";\nimport { Movie as MovieIcon, Theaters, Language, PlusOne, Favorite, FavoriteBorderOutlined, Remove, ArrowBack } from \"@mui/icons-material\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"axios\";\n\nimport selectGenreOrCategory from \"../../features/currentGenreOrCategory\";\nimport { useGetMovieQuery, useGetRecommendationsQuery } from \"../../services/TMDB\";\nimport useStyles from \"./styles\";\nimport genreIcons from \"../../assets/genres\";\nimport { MovieList } from \"..\";\n\nconst MovieInformation = () => {\n  const { id } = useParams();\n  const { data, isFetching, error } = useGetMovieQuery(id);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const { data: recommendations, isFetching: isRecommendationsFetching } = useGetRecommendationsQuery({ list: \"/recommendations\", movie_id: id });\n\n  const isMovieFavorited = true;\n  const isMovieWatchlisted = true;\n\n  const addToFavorites = () => {};\n  const addToWatchlist = () => {};\n\n  if (isFetching) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n        <CircularProgress size=\"8rem\" />\n      </Box>\n    );\n  }\n  if (error) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n        <Link to=\"/\">Something is wrong, Go back</Link>\n      </Box>\n    );\n  }\n\n  return (\n    <Grid container className={classes.containerSpaceAround}>\n      <Grid item sm={12} lg={4}>\n        <img className={classes.poster} src={`https://image.tmdb.org/t/p/w500/${data?.poster_path}`} alt={data?.title} />\n      </Grid>\n      <Grid item container direction=\"column\" lg={7}>\n        <Typography variant=\"h4\" align=\"center\" gutterBottom=\"true\">\n          {data?.title} ({data.release_date.split(\"-\")[0]})\n        </Typography>\n        <Typography variant=\"h5\" align=\"center\" gutterBottom=\"true\">\n          {data?.tagline}\n        </Typography>\n        <Grid item className={classes.containerSpaceAround}>\n          <Box>\n            <Rating readOnly value={data.vote_average / 2} />\n            <Typography variant=\"h9\" gutterBottom=\"true\" style={{ marginleft: \"10px\" }}>\n              {data?.vote_average} / 10\n            </Typography>\n          </Box>\n          <Typography variant=\"h6\" align=\"center\" gutterBottom=\"true\">\n            {data?.runtime}min | Language: {data?.spoken_languages[0].name}\n          </Typography>\n        </Grid>\n        <Grid item className={classes.genresContainer}>\n          {data?.genres?.map((genre) => (\n            <Link key={genre.name} className={classes.links} to=\"/\" onClick={() => dispatch(selectGenreOrCategory(genre.id))}>\n              <img src={genreIcons[genre.name.toLowerCase()]} className={classes.genreImage} height={30} />\n              <Typography color=\"textPrimary\" variant=\"subtitle1\">\n                {genre?.name}\n              </Typography>\n            </Link>\n          ))}\n        </Grid>\n        <Typography variant=\"h5\" gutterBottom style={{ marginTop: \"10px\" }}>\n          Overview\n        </Typography>\n        <Typography style={{ marginBottom: \"2rem\" }}>{data?.overview}</Typography>\n        <Typography variant=\"h5\" gutterBottom>\n          Top Cast\n        </Typography>\n        <Grid item container spacing={2}>\n          {data &&\n            data.credits.cast\n              .map(\n                (character, i) =>\n                  character.profile_path && (\n                    <Grid key={i} item xs={4} md={2} component={Link} to={`/actors/${character.id}`} style={{ textDecoration: \"none\" }}>\n                      <img className={classes.castImage} src={`https://image.tmdb.org/t/p/w500/${character.profile_path}`} alt={character.name} />\n                      <Typography color=\"textPrimary\">{character?.name}</Typography>\n                      <Typography color=\"textSecondary\">{character.character.split(\"/\")[0]}</Typography>\n                    </Grid>\n                  )\n              )\n              .slice(0, 6)}\n        </Grid>\n        <Grid item container style={{ marginTop: \"2rem\" }}>\n          <div className={classes.buttonsContainer}>\n            <Grid item xs={12} sm={6} className={classes.buttonsContainer}>\n              <ButtonGroup size=\"small\" variant=\"outlined\">\n                <Button target=\"_blank\" rel=\"noopener noreferrer\" href={data?.homepage} endIcon={<Language />}>\n                  Website\n                </Button>\n                <Button target=\"_blank\" rel=\"noopener noreferrer\" href={`https://www.imdb.com/title/${data?.imdb_id}`} endIcon={<MovieIcon />}>\n                  IMDB\n                </Button>\n                <Button onClick={() => {}} href=\"#\" endIcon={<Theaters />}>\n                  Trailer\n                </Button>\n              </ButtonGroup>\n            </Grid>\n            <Grid item xs={12} sm={6} className={classes.buttonsContainer}>\n              <ButtonGroup size=\"small\" variant=\"outlined\">\n                <Button onClick={addToFavorites} endIcon={isMovieFavorited ? <FavoriteBorderOutlined /> : <Favorite />}>\n                  {isMovieFavorited ? \"Unfavorite\" : \"Favorite\"}\n                </Button>\n                <Button onClick={addToWatchlist} endIcon={isMovieWatchlisted ? <Remove /> : <PlusOne />}>\n                  Watchlist\n                </Button>\n                <Button endIcon={<ArrowBack />} sx={{ borderColor: \"primary.main\" }}>\n                  <Typography style={{ textDecoration: \"none\" }} component={Link} to=\"/\" color=\"inherit\" variant=\"subtitle2\">\n                    Back\n                  </Typography>\n                </Button>\n              </ButtonGroup>\n            </Grid>\n          </div>\n        </Grid>\n      </Grid>\n      <Box marginTop=\"5rem\" width=\"100%\">\n        <Typography variant=\"h4\" gutterBottom align=\"center\">\n          You Might Also Like\n        </Typography>\n        {recommendations ? <MovieList movies={recommendations} numberOfMovies={12} /> : <Box>SORRY, NOTHING WAS FOUND </Box>}\n      </Box>\n    </Grid>\n  );\n};\n\nexport default MovieInformation;\n"]},"metadata":{},"sourceType":"module"}