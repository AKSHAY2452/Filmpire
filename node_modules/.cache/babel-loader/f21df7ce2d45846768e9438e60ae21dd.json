{"ast":null,"code":"import React,{useState}from\"react\";import{Divider,List,ListItem,ListItemText,ListSubheader,ListItemIcon,Box,CircularProgress}from\"@mui/material\";import{Link}from\"react-router-dom\";import{useTheme}from\"@mui/styles\";import useStyles from\"./styles\";import{useDispatch,useSelector}from\"react-redux\";import{selectGenreOrCategory}from\"../../features/currentGenreOrCategory\";import{useGetGenresQuery}from\"../../services/TMDB\";import genreIcons from\"../../assets/genres\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var categories=[{Label:\"Popular\",value:\"popular\"},{Label:\"Top Rated\",value:\"top_rated\"},{Label:\"Upcoming\",value:\"upcoming\"}];var redLogo=\"https://fontmeme.com/permalink/210930/8531c658a743debe1e1aa1a2fc82006e.png\";var blueLogo=\"https://fontmeme.com/permalink/210930/6854ae5c7f76597cf8680e48a2c8a50a.png\";var Sidebar=function Sidebar(_ref){var setMobileOpen=_ref.setMobileOpen;var _useSelector=useSelector(function(state){return state.currentGenreOrCategory;}),genreIdOrCategoryName=_useSelector.genreIdOrCategoryName;var theme=useTheme();var classes=useStyles();var _useGetGenresQuery=useGetGenresQuery(),data=_useGetGenresQuery.data,isFetching=_useGetGenresQuery.isFetching;//dispatch used to transfer data from our component to redux\nvar dispatch=useDispatch();return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Link,{to:\"/\",className:classes.imageLink,children:/*#__PURE__*/_jsx(\"img\",{className:classes.image,src:theme.palette.mode===\"light\"?redLogo:blueLogo,alt:\"Filmpire Logo\"})}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsxs(List,{children:[/*#__PURE__*/_jsx(ListSubheader,{children:\"Categories\"}),categories.map(function(_ref2){var Label=_ref2.Label,value=_ref2.value;return/*#__PURE__*/_jsx(Link,{className:classes.links,to:\"/\",children:/*#__PURE__*/_jsxs(ListItem,{onClick:function onClick(){return dispatch(selectGenreOrCategory(value));},button:true,children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(\"img\",{src:genreIcons[Label.toLowerCase()],className:classes.genreImage,height:30})}),/*#__PURE__*/_jsx(ListItemText,{primary:Label})]})},value);})]}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsxs(List,{children:[/*#__PURE__*/_jsx(ListSubheader,{children:\"Genres\"}),isFetching?/*#__PURE__*/_jsx(Box,{display:\"Flex\",justifyContent:\"center\",children:/*#__PURE__*/_jsx(CircularProgress,{})}):data.genres.map(function(_ref3){var name=_ref3.name,id=_ref3.id;return/*#__PURE__*/_jsx(Link,{className:classes.links,to:\"/\",children:/*#__PURE__*/_jsxs(ListItem,{onClick:function onClick(){return dispatch(selectGenreOrCategory(id));},button:true,children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(\"img\",{src:genreIcons[name.toLowerCase()],className:classes.genreImage,height:30})}),/*#__PURE__*/_jsx(ListItemText,{primary:name})]})},name);})]})]});};export default Sidebar;","map":{"version":3,"sources":["C:/Users/HP/Downloads/filmpire-l2-forked/src/components/Sidebar/Sidebar.jsx"],"names":["React","useState","Divider","List","ListItem","ListItemText","ListSubheader","ListItemIcon","Box","CircularProgress","Link","useTheme","useStyles","useDispatch","useSelector","selectGenreOrCategory","useGetGenresQuery","genreIcons","categories","Label","value","redLogo","blueLogo","Sidebar","setMobileOpen","state","currentGenreOrCategory","genreIdOrCategoryName","theme","classes","data","isFetching","dispatch","imageLink","image","palette","mode","map","links","toLowerCase","genreImage","genres","name","id"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Divider, List, ListItem, ListItemText, ListSubheader, ListItemIcon, Box, CircularProgress } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useTheme } from \"@mui/styles\";\r\nimport useStyles from \"./styles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { selectGenreOrCategory } from \"../../features/currentGenreOrCategory\";\r\nimport { useGetGenresQuery } from \"../../services/TMDB\";\r\nimport genreIcons from \"../../assets/genres\";\r\n\r\nconst categories = [\r\n  { Label: \"Popular\", value: \"popular\" },\r\n  { Label: \"Top Rated\", value: \"top_rated\" },\r\n  { Label: \"Upcoming\", value: \"upcoming\" },\r\n];\r\n\r\nconst redLogo = \"https://fontmeme.com/permalink/210930/8531c658a743debe1e1aa1a2fc82006e.png\";\r\n\r\nconst blueLogo = \"https://fontmeme.com/permalink/210930/6854ae5c7f76597cf8680e48a2c8a50a.png\";\r\n\r\nconst Sidebar = ({ setMobileOpen }) => {\r\n  const { genreIdOrCategoryName } = useSelector((state) => state.currentGenreOrCategory);\r\n  const theme = useTheme();\r\n  const classes = useStyles();\r\n  const { data, isFetching } = useGetGenresQuery();\r\n  //dispatch used to transfer data from our component to redux\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <>\r\n      <Link to=\"/\" className={classes.imageLink}>\r\n        <img className={classes.image} src={theme.palette.mode === \"light\" ? redLogo : blueLogo} alt=\"Filmpire Logo\" />\r\n      </Link>\r\n      <Divider />\r\n      <List>\r\n        <ListSubheader>Categories</ListSubheader>\r\n        {categories.map(({ Label, value }) => (\r\n          <Link key={value} className={classes.links} to=\"/\">\r\n            <ListItem onClick={() => dispatch(selectGenreOrCategory(value))} button>\r\n              <ListItemIcon>\r\n                <img src={genreIcons[Label.toLowerCase()]} className={classes.genreImage} height={30} />\r\n              </ListItemIcon>\r\n              <ListItemText primary={Label} />\r\n            </ListItem>\r\n          </Link>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        <ListSubheader>Genres</ListSubheader>\r\n\r\n        {isFetching ? (\r\n          <Box display=\"Flex\" justifyContent=\"center\">\r\n            <CircularProgress />\r\n          </Box>\r\n        ) : (\r\n          data.genres.map(({ name, id }) => (\r\n            <Link key={name} className={classes.links} to=\"/\">\r\n              <ListItem onClick={() => dispatch(selectGenreOrCategory(id))} button>\r\n                <ListItemIcon>\r\n                  <img src={genreIcons[name.toLowerCase()]} className={classes.genreImage} height={30} />\r\n                </ListItemIcon>\r\n                <ListItemText primary={name} />\r\n              </ListItem>\r\n            </Link>\r\n          ))\r\n        )}\r\n      </List>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n"]},"metadata":{},"sourceType":"module"}