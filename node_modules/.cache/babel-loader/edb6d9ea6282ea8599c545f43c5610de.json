{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Downloads\\\\filmpire-l2-forked\\\\src\\\\components\\\\MovieInformation\\\\MovieInformation.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Modal, Typography, Button, ButtonGroup, Grid, Box, CircularProgress, useMediaQuery, Rating } from \"@mui/material\";\nimport { Movie as MovieIcon, Theaters, Language, PlusOne, Favorite, FavoriteBorderOutlined, Remove, ArrowBack } from \"@mui/icons-material\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { useGetMovieQuery } from \"../../services/TMDB\";\nimport useStyles from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieInformation = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const {\n    data,\n    isFetching,\n    error\n  } = useGetMovieQuery(id);\n  const classes = useStyles();\n\n  if (isFetching) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: \"8rem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Something is wrong, Go back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: classes.containerSpaceAround,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      sm: 12,\n      lg: 4,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: classes.poster,\n        src: `https://image.tmdb.org/t/p/w500/${data === null || data === void 0 ? void 0 : data.poster_path}`,\n        alt: data === null || data === void 0 ? void 0 : data.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      direction: \"column\",\n      lg: 7,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        align: \"center\",\n        gutterBottom: true,\n        children: [data === null || data === void 0 ? void 0 : data.title, \" (\", data.release_date.split(\"-\")[0], \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        align: \"center\",\n        gutterBottom: true,\n        children: data === null || data === void 0 ? void 0 : data.tagline\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MovieInformation, \"/z/OTVaSFHHnD3KvDwjCeX1wDeQ=\", false, function () {\n  return [useParams, useGetMovieQuery, useStyles];\n});\n\n_c = MovieInformation;\nexport default MovieInformation;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieInformation\");","map":{"version":3,"sources":["C:/Users/HP/Downloads/filmpire-l2-forked/src/components/MovieInformation/MovieInformation.jsx"],"names":["React","Modal","Typography","Button","ButtonGroup","Grid","Box","CircularProgress","useMediaQuery","Rating","Movie","MovieIcon","Theaters","Language","PlusOne","Favorite","FavoriteBorderOutlined","Remove","ArrowBack","Link","useParams","useDispatch","useSelector","axios","useGetMovieQuery","useStyles","MovieInformation","id","data","isFetching","error","classes","containerSpaceAround","poster","poster_path","title","release_date","split","tagline"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Modal, Typography, Button, ButtonGroup, Grid, Box, CircularProgress, useMediaQuery, Rating } from \"@mui/material\";\nimport { Movie as MovieIcon, Theaters, Language, PlusOne, Favorite, FavoriteBorderOutlined, Remove, ArrowBack } from \"@mui/icons-material\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"axios\";\n\nimport { useGetMovieQuery } from \"../../services/TMDB\";\nimport useStyles from \"./styles\";\n\nconst MovieInformation = () => {\n  const { id } = useParams();\n  const { data, isFetching, error } = useGetMovieQuery(id);\n  const classes = useStyles();\n\n  if (isFetching) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n        <CircularProgress size=\"8rem\" />\n      </Box>\n    );\n  }\n  if (error) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n        <Link to=\"/\">Something is wrong, Go back</Link>\n      </Box>\n    );\n  }\n\n  return (\n    <Grid container className={classes.containerSpaceAround}>\n      <Grid item sm={12} lg={4}>\n        <img className={classes.poster} src={`https://image.tmdb.org/t/p/w500/${data?.poster_path}`} alt={data?.title} />\n      </Grid>\n      <Grid item container direction=\"column\" lg={7}>\n        <Typography variant=\"h3\" align=\"center\" gutterBottom>\n          {data?.title} ({data.release_date.split(\"-\")[0]})\n        </Typography>\n        <Typography variant=\"h5\" align=\"center\" gutterBottom>\n          {data?.tagline}\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default MovieInformation;\n"]},"metadata":{},"sourceType":"module"}