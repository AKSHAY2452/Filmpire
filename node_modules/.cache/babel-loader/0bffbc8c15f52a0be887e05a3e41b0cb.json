{"ast":null,"code":"import React,{useEffect,useContext}from\"react\";import alanBtn from\"@alan-ai/alan-sdk-web\";import{useDispatch}from\"react-redux\";import{useHistory}from\"react-router-dom\";import{selectGenreOrCategory,searchMovie}from\"../features/currentGenreOrCategory\";import{ColorModeContext}from\"../utils/ToggleColorMode\";import{fetchToken}from\"../utils\";var useAlan=function useAlan(){var _useContext=useContext(ColorModeContext),setMode=_useContext.setMode;var dispatch=useDispatch();var history=useHistory();useEffect(function(){alanBtn({key:\"67c1bce4cb05008eef21f4d87619af332e956eca572e1d8b807a3e2338fdd0dc/stage\",onCommand:function onCommand(_ref){var command=_ref.command,mode=_ref.mode,genres=_ref.genres,genreOrCategory=_ref.genreOrCategory,query=_ref.query;if(command===\"chooseGenre\"){var foundGenre=genres.find(function(g){return g.name.toLowerCase()===genreOrCategory.toLowerCase();});if(foundGenre){history.push(\"/\");dispatch(selectGenreOrCategory(foundGenre.id));}else{var category=genreOrCategory.startsWith(\"top\")?\"top_rated\":genreOrCategory;history.push(\"/\");dispatch(selectGenreOrCategory(category));}}else if(command===\"changeMode\"){if(mode===\"light\"){setMode(\"light\");}else{setMode(\"dark\");}}else if(command===\"login\"){fetchToken();}else if(command===\"logout\"){localStorage.clear();history.push(\"/\");}else if(command===\"search\"){dispatch(searchMovie(query));}}});},[]);};export default useAlan;","map":{"version":3,"sources":["C:/Users/HP/Downloads/filmpire-l2-forked/src/components/Alan.jsx"],"names":["React","useEffect","useContext","alanBtn","useDispatch","useHistory","selectGenreOrCategory","searchMovie","ColorModeContext","fetchToken","useAlan","setMode","dispatch","history","key","onCommand","command","mode","genres","genreOrCategory","query","foundGenre","find","g","name","toLowerCase","push","id","category","startsWith","localStorage","clear"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,UAA3B,KAA6C,OAA7C,CACA,MAAOC,CAAAA,OAAP,KAAoB,uBAApB,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,UAAT,KAA2B,kBAA3B,CAEA,OAASC,qBAAT,CAAgCC,WAAhC,KAAmD,oCAAnD,CACA,OAASC,gBAAT,KAAiC,0BAAjC,CACA,OAASC,UAAT,KAA2B,UAA3B,CAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CACpB,gBAAoBR,UAAU,CAACM,gBAAD,CAA9B,CAAQG,OAAR,aAAQA,OAAR,CACA,GAAMC,CAAAA,QAAQ,CAAGR,WAAW,EAA5B,CACA,GAAMS,CAAAA,OAAO,CAAGR,UAAU,EAA1B,CAEAJ,SAAS,CAAC,UAAM,CACdE,OAAO,CAAC,CACNW,GAAG,CAAE,wEADC,CAENC,SAAS,CAAE,wBAAuD,IAApDC,CAAAA,OAAoD,MAApDA,OAAoD,CAA3CC,IAA2C,MAA3CA,IAA2C,CAArCC,MAAqC,MAArCA,MAAqC,CAA7BC,eAA6B,MAA7BA,eAA6B,CAAZC,KAAY,MAAZA,KAAY,CAChE,GAAIJ,OAAO,GAAK,aAAhB,CAA+B,CAC7B,GAAMK,CAAAA,UAAU,CAAGH,MAAM,CAACI,IAAP,CAAY,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACC,IAAF,CAAOC,WAAP,KAAyBN,eAAe,CAACM,WAAhB,EAAhC,EAAZ,CAAnB,CAEA,GAAIJ,UAAJ,CAAgB,CACdR,OAAO,CAACa,IAAR,CAAa,GAAb,EACAd,QAAQ,CAACN,qBAAqB,CAACe,UAAU,CAACM,EAAZ,CAAtB,CAAR,CACD,CAHD,IAGO,CACL,GAAMC,CAAAA,QAAQ,CAAGT,eAAe,CAACU,UAAhB,CAA2B,KAA3B,EAAoC,WAApC,CAAkDV,eAAnE,CACAN,OAAO,CAACa,IAAR,CAAa,GAAb,EACAd,QAAQ,CAACN,qBAAqB,CAACsB,QAAD,CAAtB,CAAR,CACD,CACF,CAXD,IAWO,IAAIZ,OAAO,GAAK,YAAhB,CAA8B,CACnC,GAAIC,IAAI,GAAK,OAAb,CAAsB,CACpBN,OAAO,CAAC,OAAD,CAAP,CACD,CAFD,IAEO,CACLA,OAAO,CAAC,MAAD,CAAP,CACD,CACF,CANM,IAMA,IAAIK,OAAO,GAAK,OAAhB,CAAyB,CAC9BP,UAAU,GACX,CAFM,IAEA,IAAIO,OAAO,GAAK,QAAhB,CAA0B,CAC/Bc,YAAY,CAACC,KAAb,GACAlB,OAAO,CAACa,IAAR,CAAa,GAAb,EACD,CAHM,IAGA,IAAIV,OAAO,GAAK,QAAhB,CAA0B,CAC/BJ,QAAQ,CAACL,WAAW,CAACa,KAAD,CAAZ,CAAR,CACD,CACF,CA5BK,CAAD,CAAP,CA8BD,CA/BQ,CA+BN,EA/BM,CAAT,CAgCD,CArCD,CAuCA,cAAeV,CAAAA,OAAf","sourcesContent":["import React, { useEffect, useContext } from \"react\";\r\nimport alanBtn from \"@alan-ai/alan-sdk-web\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { selectGenreOrCategory, searchMovie } from \"../features/currentGenreOrCategory\";\r\nimport { ColorModeContext } from \"../utils/ToggleColorMode\";\r\nimport { fetchToken } from \"../utils\";\r\n\r\nconst useAlan = () => {\r\n  const { setMode } = useContext(ColorModeContext);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    alanBtn({\r\n      key: \"67c1bce4cb05008eef21f4d87619af332e956eca572e1d8b807a3e2338fdd0dc/stage\",\r\n      onCommand: ({ command, mode, genres, genreOrCategory, query }) => {\r\n        if (command === \"chooseGenre\") {\r\n          const foundGenre = genres.find((g) => g.name.toLowerCase() === genreOrCategory.toLowerCase());\r\n\r\n          if (foundGenre) {\r\n            history.push(\"/\");\r\n            dispatch(selectGenreOrCategory(foundGenre.id));\r\n          } else {\r\n            const category = genreOrCategory.startsWith(\"top\") ? \"top_rated\" : genreOrCategory;\r\n            history.push(\"/\");\r\n            dispatch(selectGenreOrCategory(category));\r\n          }\r\n        } else if (command === \"changeMode\") {\r\n          if (mode === \"light\") {\r\n            setMode(\"light\");\r\n          } else {\r\n            setMode(\"dark\");\r\n          }\r\n        } else if (command === \"login\") {\r\n          fetchToken();\r\n        } else if (command === \"logout\") {\r\n          localStorage.clear();\r\n          history.push(\"/\");\r\n        } else if (command === \"search\") {\r\n          dispatch(searchMovie(query));\r\n        }\r\n      },\r\n    });\r\n  }, []);\r\n};\r\n\r\nexport default useAlan;\r\n"]},"metadata":{},"sourceType":"module"}