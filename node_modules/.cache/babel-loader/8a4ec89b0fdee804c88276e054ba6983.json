{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Downloads\\\\filmpire-l2-forked\\\\src\\\\components\\\\Sidebar\\\\Sidebar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Divider, List, ListItem, ListItemText, ListSubheader, ListItemIcon, Box, CircularProgress } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport { useTheme } from \"@mui/styles\";\nimport useStyles from \"./styles\";\nimport { useGetGenresQuery } from \"../../services/TMDB\";\nimport genreIcons from \"../../assets/genres\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst categories = [{\n  Label: \"Popular\",\n  value: \"popular\"\n}, {\n  Label: \"Top Rated\",\n  value: \"top_rated\"\n}, {\n  Label: \"Upcoming\",\n  value: \"upcoming\"\n}];\nconst redLogo = \"https://fontmeme.com/permalink/210930/8531c658a743debe1e1aa1a2fc82006e.png\";\nconst blueLogo = \"https://fontmeme.com/permalink/210930/6854ae5c7f76597cf8680e48a2c8a50a.png\";\n\nconst Sidebar = ({\n  setMobileOpen\n}) => {\n  _s();\n\n  const theme = useTheme();\n  const classes = useStyles();\n  const {\n    data,\n    isFetching\n  } = useGetGenresQuery();\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      className: classes.imageLink,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: classes.image,\n        src: theme.palette.mode === \"light\" ? redLogo : blueLogo,\n        alt: \"Filmpire Logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: [/*#__PURE__*/_jsxDEV(ListSubheader, {\n        children: \"Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), categories.map(({\n        label,\n        value\n      }) => /*#__PURE__*/_jsxDEV(Link, {\n        className: classes.links,\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(ListItem, {\n          onClick: () => {},\n          button: true,\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: genreIcons[label.toLowerCase()],\n              className: classes.genreImages,\n              height: 30\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)\n      }, value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: [/*#__PURE__*/_jsxDEV(ListSubheader, {\n        children: \"Genres\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), isFetching ? /*#__PURE__*/_jsxDEV(Box, {\n        display: \"Flex\",\n        justifyContent: \"center\",\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this) : data.genres.map(({\n        name,\n        id\n      }) => /*#__PURE__*/_jsxDEV(Link, {\n        className: classes.links,\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(ListItem, {\n          onClick: () => {},\n          button: true,\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: genreIcons[name.toLowerCase()],\n              className: classes.genreImages,\n              height: 30\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this)\n      }, name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Sidebar, \"v11OIRbLNKQbrOYumoxNND3tqbU=\", false, function () {\n  return [useTheme, useStyles, useGetGenresQuery];\n});\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["C:/Users/HP/Downloads/filmpire-l2-forked/src/components/Sidebar/Sidebar.jsx"],"names":["React","useState","Divider","List","ListItem","ListItemText","ListSubheader","ListItemIcon","Box","CircularProgress","Link","useTheme","useStyles","useGetGenresQuery","genreIcons","categories","Label","value","redLogo","blueLogo","Sidebar","setMobileOpen","theme","classes","data","isFetching","console","log","imageLink","image","palette","mode","map","label","links","toLowerCase","genreImages","genres","name","id"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Divider, List, ListItem, ListItemText, ListSubheader, ListItemIcon, Box, CircularProgress } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useTheme } from \"@mui/styles\";\r\nimport useStyles from \"./styles\";\r\n\r\nimport { useGetGenresQuery } from \"../../services/TMDB\";\r\nimport genreIcons from \"../../assets/genres\";\r\n\r\nconst categories = [\r\n  { Label: \"Popular\", value: \"popular\" },\r\n  { Label: \"Top Rated\", value: \"top_rated\" },\r\n  { Label: \"Upcoming\", value: \"upcoming\" },\r\n];\r\n\r\nconst redLogo = \"https://fontmeme.com/permalink/210930/8531c658a743debe1e1aa1a2fc82006e.png\";\r\n\r\nconst blueLogo = \"https://fontmeme.com/permalink/210930/6854ae5c7f76597cf8680e48a2c8a50a.png\";\r\n\r\nconst Sidebar = ({ setMobileOpen }) => {\r\n  const theme = useTheme();\r\n  const classes = useStyles();\r\n  const { data, isFetching } = useGetGenresQuery();\r\n\r\n  console.log(data);\r\n\r\n  return (\r\n    <>\r\n      <Link to=\"/\" className={classes.imageLink}>\r\n        <img className={classes.image} src={theme.palette.mode === \"light\" ? redLogo : blueLogo} alt=\"Filmpire Logo\" />\r\n      </Link>\r\n      <Divider />\r\n      <List>\r\n        <ListSubheader>Categories</ListSubheader>\r\n        {categories.map(({ label, value }) => (\r\n          <Link key={value} className={classes.links} to=\"/\">\r\n            <ListItem onClick={() => {}} button>\r\n              <ListItemIcon>\r\n                <img src={genreIcons[label.toLowerCase()]} className={classes.genreImages} height={30} />\r\n              </ListItemIcon>\r\n              <ListItemText primary={label} />\r\n            </ListItem>\r\n          </Link>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        <ListSubheader>Genres</ListSubheader>\r\n\r\n        {isFetching ? (\r\n          <Box display=\"Flex\" justifyContent=\"center\">\r\n            <CircularProgress />\r\n          </Box>\r\n        ) : (\r\n          data.genres.map(({ name, id }) => (\r\n            <Link key={name} className={classes.links} to=\"/\">\r\n              <ListItem onClick={() => {}} button>\r\n                <ListItemIcon>\r\n                  <img src={genreIcons[name.toLowerCase()]} className={classes.genreImages} height={30} />\r\n                </ListItemIcon>\r\n                <ListItemText primary={name} />\r\n              </ListItem>\r\n            </Link>\r\n          ))\r\n        )}\r\n      </List>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n"]},"metadata":{},"sourceType":"module"}