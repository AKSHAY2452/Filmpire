{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  user: {},\n  isAuthenticated: false,\n  sessionId: \"\"\n};\nconst authSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    setUser: (state, action) => {\n      state.user = action.payload;\n      state.isAuthenticated = true;\n      state.sessionId = localStorage.getItem(\"session_id\");\n      localStorage.setItem(\"accountId\", action.payload.id);\n    }\n  }\n});\nexport const {\n  setUser\n} = authSlice.actions;\nexport default authSlice.reducer;\nexport const userSelector = state => state.user;","map":{"version":3,"sources":["C:/Users/HP/OneDrive/Desktop/project-filmpire/src/features/auth.js"],"names":["createSlice","initialState","user","isAuthenticated","sessionId","authSlice","name","reducers","setUser","state","action","payload","localStorage","getItem","setItem","id","actions","reducer","userSelector"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,eAAe,EAAE,KAFE;AAGnBC,EAAAA,SAAS,EAAE;AAHQ,CAArB;AAMA,MAAMC,SAAS,GAAGL,WAAW,CAAC;AAC5BM,EAAAA,IAAI,EAAE,MADsB;AAE5BL,EAAAA,YAF4B;AAG5BM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OAAO,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC1BD,MAAAA,KAAK,CAACP,IAAN,GAAaQ,MAAM,CAACC,OAApB;AACAF,MAAAA,KAAK,CAACN,eAAN,GAAwB,IAAxB;AACAM,MAAAA,KAAK,CAACL,SAAN,GAAkBQ,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAlB;AAEAD,MAAAA,YAAY,CAACE,OAAb,CAAqB,WAArB,EAAkCJ,MAAM,CAACC,OAAP,CAAeI,EAAjD;AACD;AAPO;AAHkB,CAAD,CAA7B;AAcA,OAAO,MAAM;AAAEP,EAAAA;AAAF,IAAcH,SAAS,CAACW,OAA9B;AAEP,eAAeX,SAAS,CAACY,OAAzB;AAEA,OAAO,MAAMC,YAAY,GAAIT,KAAD,IAAWA,KAAK,CAACP,IAAtC","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  user: {},\r\n  isAuthenticated: false,\r\n  sessionId: \"\",\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: \"user\",\r\n  initialState,\r\n  reducers: {\r\n    setUser: (state, action) => {\r\n      state.user = action.payload;\r\n      state.isAuthenticated = true;\r\n      state.sessionId = localStorage.getItem(\"session_id\");\r\n\r\n      localStorage.setItem(\"accountId\", action.payload.id);\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setUser } = authSlice.actions;\r\n\r\nexport default authSlice.reducer;\r\n\r\nexport const userSelector = (state) => state.user;\r\n"]},"metadata":{},"sourceType":"module"}