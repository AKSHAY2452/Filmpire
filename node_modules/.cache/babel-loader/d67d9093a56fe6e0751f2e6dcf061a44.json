{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Downloads\\\\filmpire-l2-forked\\\\src\\\\components\\\\Movies\\\\Movies.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Box, CircularProgress, useMediaQuery, Typography } from \"@mui/material\";\nimport { useSelector } from \"react-redux\";\nimport { useGetMoviesQuery } from \"../../services/TMDB\";\nimport { MovieList } from \"..\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Movies = () => {\n  _s();\n\n  const {\n    data,\n    error,\n    isFetching\n  } = useGetMoviesQuery();\n\n  if (isFetching) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"Flex\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: \"4rem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (!data.results.length) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"Flex\",\n      alignItems: \"center\",\n      mt: \"20px\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: [\"No movies that match that name.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), \"Please search for something else.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (error) return \"error has occured\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MovieList, {\n      movies: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Movies, \"uE/xMUrgrGey1l3aokjtAW63Et0=\", false, function () {\n  return [useGetMoviesQuery];\n});\n\n_c = Movies;\nexport default Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["C:/Users/HP/Downloads/filmpire-l2-forked/src/components/Movies/Movies.jsx"],"names":["React","useState","useEffect","Box","CircularProgress","useMediaQuery","Typography","useSelector","useGetMoviesQuery","MovieList","Movies","data","error","isFetching","results","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,gBAAd,EAAgCC,aAAhC,EAA+CC,UAA/C,QAAiE,eAAjE;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,SAASC,SAAT,QAA0B,IAA1B;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA8BL,iBAAiB,EAArD;;AAEA,MAAIK,UAAJ,EAAgB;AACd,wBACE,QAAC,GAAD;AAAK,MAAA,OAAO,EAAC,MAAb;AAAoB,MAAA,cAAc,EAAC,QAAnC;AAAA,6BACE,QAAC,gBAAD;AAAkB,QAAA,IAAI,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,MAAI,CAACF,IAAI,CAACG,OAAL,CAAaC,MAAlB,EAA0B;AACxB,wBACE,QAAC,GAAD;AAAK,MAAA,OAAO,EAAC,MAAb;AAAoB,MAAA,UAAU,EAAC,QAA/B;AAAwC,MAAA,EAAE,EAAC,MAA3C;AAAA,6BACE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA,mEAEE;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AAED,MAAIH,KAAJ,EAAW,OAAO,mBAAP;AAEX,sBACE;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,MAAM,EAAED;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA9BD;;GAAMD,M;UACgCF,iB;;;KADhCE,M;AAgCN,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Box, CircularProgress, useMediaQuery, Typography } from \"@mui/material\";\nimport { useSelector } from \"react-redux\";\n\nimport { useGetMoviesQuery } from \"../../services/TMDB\";\nimport { MovieList } from \"..\";\n\nconst Movies = () => {\n  const { data, error, isFetching } = useGetMoviesQuery();\n\n  if (isFetching) {\n    return (\n      <Box display=\"Flex\" justifyContent=\"center\">\n        <CircularProgress size=\"4rem\" />\n      </Box>\n    );\n  }\n\n  if (!data.results.length) {\n    return (\n      <Box display=\"Flex\" alignItems=\"center\" mt=\"20px\">\n        <Typography variant=\"h4\">\n          No movies that match that name.\n          <br />\n          Please search for something else.\n        </Typography>\n      </Box>\n    );\n  }\n\n  if (error) return \"error has occured\";\n\n  return (\n    <div>\n      <MovieList movies={data} />\n    </div>\n  );\n};\n\nexport default Movies;\n"]},"metadata":{},"sourceType":"module"}