{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Desktop\\\\project-filmpire\\\\src\\\\components\\\\Profile\\\\Profile.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Typography, Button, Box } from \"@mui/material\";\nimport { useSelector } from \"react-redux\";\nimport { ExitToApp } from \"@mui/icons-material\";\nimport { useGetListQuery } from \"../../services/TMDB\";\nimport { userSelector } from \"../../features/auth\";\nimport { RatedCards } from \"..\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profile = () => {\n  _s();\n\n  var _favoriteMovies$resul, _watchlistMovies$resu;\n\n  const {\n    user\n  } = useSelector(userSelector);\n  const {\n    data: favoriteMovies,\n    refetch: refetchFavorites\n  } = useGetListQuery({\n    listName: \"favorite/movies\",\n    accountId: user.id,\n    sessionId: localStorage.getItem(\"session_id\"),\n    page: 1\n  });\n  const {\n    data: watchlistMovies,\n    refetch: refetchWatchlisted\n  } = useGetListQuery({\n    listName: \"watchlist/movies\",\n    accountId: user.id,\n    sessionId: localStorage.getItem(\"session_id\"),\n    page: 1\n  }); //refetch is used because when we unwatchlist then to update it on profile page we need to reload to update instantly we use refetch\n\n  useEffect(() => {\n    refetchFavorites();\n    refetchWatchlisted();\n  }, []);\n\n  const logout = () => {\n    localStorage.clear();\n    window.location.href = \"/\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"My Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"inherit\",\n        onClick: logout,\n        children: [\"Logout \\xA0 \", /*#__PURE__*/_jsxDEV(ExitToApp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), !(favoriteMovies === null || favoriteMovies === void 0 ? void 0 : (_favoriteMovies$resul = favoriteMovies.results) === null || _favoriteMovies$resul === void 0 ? void 0 : _favoriteMovies$resul.length) && !(watchlistMovies === null || watchlistMovies === void 0 ? void 0 : (_watchlistMovies$resu = watchlistMovies.results) === null || _watchlistMovies$resu === void 0 ? void 0 : _watchlistMovies$resu.length) ? /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      children: \"Add favorites or watchlist some movies to see them here!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(RatedCards, {\n        title: \"Favorite Movies\",\n        data: favoriteMovies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(RatedCards, {\n        title: \"Watchlist\",\n        data: watchlistMovies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Profile, \"qugffaRekiBKOj1Mnfighmne0vA=\", false, function () {\n  return [useSelector, useGetListQuery, useGetListQuery];\n});\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["C:/Users/HP/OneDrive/Desktop/project-filmpire/src/components/Profile/Profile.jsx"],"names":["React","useEffect","Typography","Button","Box","useSelector","ExitToApp","useGetListQuery","userSelector","RatedCards","Profile","user","data","favoriteMovies","refetch","refetchFavorites","listName","accountId","id","sessionId","localStorage","getItem","page","watchlistMovies","refetchWatchlisted","logout","clear","window","location","href","results","length"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Typography, Button, Box } from \"@mui/material\";\nimport { useSelector } from \"react-redux\";\nimport { ExitToApp } from \"@mui/icons-material\";\n\nimport { useGetListQuery } from \"../../services/TMDB\";\nimport { userSelector } from \"../../features/auth\";\nimport { RatedCards } from \"..\";\n\nconst Profile = () => {\n  const { user } = useSelector(userSelector);\n\n  const { data: favoriteMovies, refetch: refetchFavorites } = useGetListQuery({ listName: \"favorite/movies\", accountId: user.id, sessionId: localStorage.getItem(\"session_id\"), page: 1 });\n  const { data: watchlistMovies, refetch: refetchWatchlisted } = useGetListQuery({ listName: \"watchlist/movies\", accountId: user.id, sessionId: localStorage.getItem(\"session_id\"), page: 1 });\n\n  //refetch is used because when we unwatchlist then to update it on profile page we need to reload to update instantly we use refetch\n  useEffect(() => {\n    refetchFavorites();\n    refetchWatchlisted();\n  }, []);\n\n  const logout = () => {\n    localStorage.clear();\n\n    window.location.href = \"/\";\n  };\n\n  return (\n    <Box>\n      <Box display=\"flex\" justifyContent=\"space-between\">\n        <Typography variant=\"h4\" gutterBottom>\n          My Profile\n        </Typography>\n        <Button color=\"inherit\" onClick={logout}>\n          Logout &nbsp; <ExitToApp />\n        </Button>\n      </Box>\n      {!favoriteMovies?.results?.length && !watchlistMovies?.results?.length ? (\n        <Typography variant=\"h5\">Add favorites or watchlist some movies to see them here!</Typography>\n      ) : (\n        <Box>\n          <RatedCards title=\"Favorite Movies\" data={favoriteMovies} />\n          <RatedCards title=\"Watchlist\" data={watchlistMovies} />\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}