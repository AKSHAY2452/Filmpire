{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useContext } from \"react\";\nimport alanBtn from \"@alan-ai/alan-sdk-web\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { selectGenreOrCategory, searchMovie } from \"../features/currentGenreOrCategory\";\nimport { ColorModeContext } from \"../utils/ToggleColorMode\";\nimport { fetchToken } from \"../utils\";\n\nconst useAlan = () => {\n  _s();\n\n  const {\n    setMode\n  } = useContext(ColorModeContext);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  useEffect(() => {\n    alanBtn({\n      key: \"67c1bce4cb05008eef21f4d87619af332e956eca572e1d8b807a3e2338fdd0dc/stage\",\n      onCommand: ({\n        command,\n        mode,\n        genres,\n        genreOrCategory,\n        query\n      }) => {\n        if (command === \"chooseGenre\") {\n          const foundGenre = genres.find(g => g.name.toLowerCase() === genreOrCategory.toLowerCase());\n\n          if (foundGenre) {\n            history.push(\"/\");\n            dispatch(selectGenreOrCategory(foundGenre.id));\n          } else {\n            const category = genreOrCategory.startsWith(\"top\") ? \"top_rated\" : genreOrCategory;\n            history.push(\"/\");\n            dispatch(selectGenreOrCategory(category));\n          }\n        } else if (command === \"changeMode\") {\n          if (mode === \"light\") {\n            setMode(\"light\");\n          } else {\n            setMode(\"dark\");\n          }\n        } else if (command === \"login\") {\n          fetchToken();\n        } else if (command === \"logout\") {\n          localStorage.clear();\n          history.push(\"/\");\n        } else if (command === \"search\") {\n          dispatch(searchMovie(query));\n        }\n      }\n    });\n  }, []);\n};\n\n_s(useAlan, \"TFrtSOtFa1Q7j+GnIXuKXLuOgec=\", false, function () {\n  return [useDispatch, useHistory];\n});\n\nexport default useAlan;","map":{"version":3,"sources":["C:/Users/HP/OneDrive/Desktop/project-filmpire/src/components/Alan.jsx"],"names":["React","useEffect","useContext","alanBtn","useDispatch","useHistory","selectGenreOrCategory","searchMovie","ColorModeContext","fetchToken","useAlan","setMode","dispatch","history","key","onCommand","command","mode","genres","genreOrCategory","query","foundGenre","find","g","name","toLowerCase","push","id","category","startsWith","localStorage","clear"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,SAASC,qBAAT,EAAgCC,WAAhC,QAAmD,oCAAnD;AACA,SAASC,gBAAT,QAAiC,0BAAjC;AACA,SAASC,UAAT,QAA2B,UAA3B;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM;AAAEC,IAAAA;AAAF,MAAcT,UAAU,CAACM,gBAAD,CAA9B;AACA,QAAMI,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,OAAO,GAAGR,UAAU,EAA1B;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,OAAO,CAAC;AACNW,MAAAA,GAAG,EAAE,wEADC;AAENC,MAAAA,SAAS,EAAE,CAAC;AAAEC,QAAAA,OAAF;AAAWC,QAAAA,IAAX;AAAiBC,QAAAA,MAAjB;AAAyBC,QAAAA,eAAzB;AAA0CC,QAAAA;AAA1C,OAAD,KAAuD;AAChE,YAAIJ,OAAO,KAAK,aAAhB,EAA+B;AAC7B,gBAAMK,UAAU,GAAGH,MAAM,CAACI,IAAP,CAAaC,CAAD,IAAOA,CAAC,CAACC,IAAF,CAAOC,WAAP,OAAyBN,eAAe,CAACM,WAAhB,EAA5C,CAAnB;;AAEA,cAAIJ,UAAJ,EAAgB;AACdR,YAAAA,OAAO,CAACa,IAAR,CAAa,GAAb;AACAd,YAAAA,QAAQ,CAACN,qBAAqB,CAACe,UAAU,CAACM,EAAZ,CAAtB,CAAR;AACD,WAHD,MAGO;AACL,kBAAMC,QAAQ,GAAGT,eAAe,CAACU,UAAhB,CAA2B,KAA3B,IAAoC,WAApC,GAAkDV,eAAnE;AACAN,YAAAA,OAAO,CAACa,IAAR,CAAa,GAAb;AACAd,YAAAA,QAAQ,CAACN,qBAAqB,CAACsB,QAAD,CAAtB,CAAR;AACD;AACF,SAXD,MAWO,IAAIZ,OAAO,KAAK,YAAhB,EAA8B;AACnC,cAAIC,IAAI,KAAK,OAAb,EAAsB;AACpBN,YAAAA,OAAO,CAAC,OAAD,CAAP;AACD,WAFD,MAEO;AACLA,YAAAA,OAAO,CAAC,MAAD,CAAP;AACD;AACF,SANM,MAMA,IAAIK,OAAO,KAAK,OAAhB,EAAyB;AAC9BP,UAAAA,UAAU;AACX,SAFM,MAEA,IAAIO,OAAO,KAAK,QAAhB,EAA0B;AAC/Bc,UAAAA,YAAY,CAACC,KAAb;AACAlB,UAAAA,OAAO,CAACa,IAAR,CAAa,GAAb;AACD,SAHM,MAGA,IAAIV,OAAO,KAAK,QAAhB,EAA0B;AAC/BJ,UAAAA,QAAQ,CAACL,WAAW,CAACa,KAAD,CAAZ,CAAR;AACD;AACF;AA5BK,KAAD,CAAP;AA8BD,GA/BQ,EA+BN,EA/BM,CAAT;AAgCD,CArCD;;GAAMV,O;UAEaN,W,EACDC,U;;;AAoClB,eAAeK,OAAf","sourcesContent":["import React, { useEffect, useContext } from \"react\";\r\nimport alanBtn from \"@alan-ai/alan-sdk-web\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { selectGenreOrCategory, searchMovie } from \"../features/currentGenreOrCategory\";\r\nimport { ColorModeContext } from \"../utils/ToggleColorMode\";\r\nimport { fetchToken } from \"../utils\";\r\n\r\nconst useAlan = () => {\r\n  const { setMode } = useContext(ColorModeContext);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    alanBtn({\r\n      key: \"67c1bce4cb05008eef21f4d87619af332e956eca572e1d8b807a3e2338fdd0dc/stage\",\r\n      onCommand: ({ command, mode, genres, genreOrCategory, query }) => {\r\n        if (command === \"chooseGenre\") {\r\n          const foundGenre = genres.find((g) => g.name.toLowerCase() === genreOrCategory.toLowerCase());\r\n\r\n          if (foundGenre) {\r\n            history.push(\"/\");\r\n            dispatch(selectGenreOrCategory(foundGenre.id));\r\n          } else {\r\n            const category = genreOrCategory.startsWith(\"top\") ? \"top_rated\" : genreOrCategory;\r\n            history.push(\"/\");\r\n            dispatch(selectGenreOrCategory(category));\r\n          }\r\n        } else if (command === \"changeMode\") {\r\n          if (mode === \"light\") {\r\n            setMode(\"light\");\r\n          } else {\r\n            setMode(\"dark\");\r\n          }\r\n        } else if (command === \"login\") {\r\n          fetchToken();\r\n        } else if (command === \"logout\") {\r\n          localStorage.clear();\r\n          history.push(\"/\");\r\n        } else if (command === \"search\") {\r\n          dispatch(searchMovie(query));\r\n        }\r\n      },\r\n    });\r\n  }, []);\r\n};\r\n\r\nexport default useAlan;\r\n"]},"metadata":{},"sourceType":"module"}