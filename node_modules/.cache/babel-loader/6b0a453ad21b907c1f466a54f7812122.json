{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Desktop\\\\project-filmpire\\\\src\\\\utils\\\\ToggleColorMode.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useMemo, createContext } from \"react\";\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ColorModeContext = /*#__PURE__*/createContext();\n\nconst ToggleColorMode = ({\n  children\n}) => {\n  _s();\n\n  const [mode, setMode] = useState(\"light\");\n\n  const toggleColorMode = () => {\n    setMode(prevMode => prevMode === \"light\" ? \"dark\" : \"light\");\n  };\n\n  const theme = useMemo(() => createTheme({\n    palette: {\n      mode\n    }\n  }), [mode]);\n  return /*#__PURE__*/_jsxDEV(ColorModeContext.Provider, {\n    value: {\n      mode,\n      setMode,\n      toggleColorMode\n    },\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ToggleColorMode, \"cbR/ILtTcGQBxvCvj3m4ZPbHb9Q=\");\n\n_c = ToggleColorMode;\nexport default ToggleColorMode;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToggleColorMode\");","map":{"version":3,"sources":["C:/Users/HP/OneDrive/Desktop/project-filmpire/src/utils/ToggleColorMode.jsx"],"names":["React","useState","useMemo","createContext","ThemeProvider","createTheme","ColorModeContext","ToggleColorMode","children","mode","setMode","toggleColorMode","prevMode","theme","palette"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,OAA1B,EAAmCC,aAAnC,QAAwD,OAAxD;AACA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,sBAA3C;;AAEA,OAAO,MAAMC,gBAAgB,gBAAGH,aAAa,EAAtC;;AAEP,MAAMI,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACxC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,OAAD,CAAhC;;AAEA,QAAMU,eAAe,GAAG,MAAM;AAC5BD,IAAAA,OAAO,CAAEE,QAAD,IAAeA,QAAQ,KAAK,OAAb,GAAuB,MAAvB,GAAgC,OAAhD,CAAP;AACD,GAFD;;AAIA,QAAMC,KAAK,GAAGX,OAAO,CACnB,MACEG,WAAW,CAAC;AACVS,IAAAA,OAAO,EAAE;AACPL,MAAAA;AADO;AADC,GAAD,CAFM,EAOnB,CAACA,IAAD,CAPmB,CAArB;AAUA,sBACE,QAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAE;AAAEA,MAAAA,IAAF;AAAQC,MAAAA,OAAR;AAAiBC,MAAAA;AAAjB,KAAlC;AAAA,2BACE,QAAC,aAAD;AAAe,MAAA,KAAK,EAAEE,KAAtB;AAAA,gBAA8BL;AAA9B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAtBD;;GAAMD,e;;KAAAA,e;AAwBN,eAAeA,eAAf","sourcesContent":["import React, { useState, useMemo, createContext } from \"react\";\r\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\r\n\r\nexport const ColorModeContext = createContext();\r\n\r\nconst ToggleColorMode = ({ children }) => {\r\n  const [mode, setMode] = useState(\"light\");\r\n\r\n  const toggleColorMode = () => {\r\n    setMode((prevMode) => (prevMode === \"light\" ? \"dark\" : \"light\"));\r\n  };\r\n\r\n  const theme = useMemo(\r\n    () =>\r\n      createTheme({\r\n        palette: {\r\n          mode,\r\n        },\r\n      }),\r\n    [mode]\r\n  );\r\n\r\n  return (\r\n    <ColorModeContext.Provider value={{ mode, setMode, toggleColorMode }}>\r\n      <ThemeProvider theme={theme}>{children}</ThemeProvider>\r\n    </ColorModeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ToggleColorMode;\r\n"]},"metadata":{},"sourceType":"module"}