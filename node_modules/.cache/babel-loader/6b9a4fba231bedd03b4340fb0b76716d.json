{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Downloads\\\\filmpire-l2-forked\\\\src\\\\components\\\\NavBar\\\\NavBar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { AppBar, IconButton, Toolbar, Drawer, Button, Avatar, useMediaQuery } from \"@mui/material\";\nimport { Menu, AccountCircle, Brightness4, Brightness7 } from \"@mui/icons-material\";\nimport { Link } from \"react-router-dom\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { Sidebar } from \"..\";\nimport { Search } from \"..\";\nimport { fetchToken, createSessionId, moviesApi } from \"../../utils\";\nimport useStyles from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NavBar = () => {\n  _s();\n\n  const [mobileOpen, setMobileOpen] = useState(false);\n  const classes = useStyles();\n  const isMobile = useMediaQuery(\"(max-width:600px)\");\n  const theme = useTheme();\n  const isAuthenticated = false;\n  const token = localStorage.getItem(\"request_token\");\n  const sessionIdFromLocalStorage = localStorage.getItem(\"session_id\");\n  useEffect(() => {\n    const logInUser = async () => {\n      if (token) {\n        if (sessionIdFromLocalStorage) {\n          const {\n            data: userData\n          } = await moviesApi.get(`/account?session_id=${sessionIdFromLocalStorage}`);\n        } else {\n          const sessionId = await createSessionId();\n          const {\n            data: userData\n          } = await moviesApi.get(`/account?session_id=${sessionId}`);\n        }\n      }\n    };\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"fixed\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        className: classes.toolbar,\n        children: [isMobile && /*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"inherit\",\n          edge: \"start\",\n          style: {\n            outline: \"none\"\n          },\n          onClick: () => setMobileOpen(prevMobileOpen => !prevMobileOpen),\n          className: classes.menuButton,\n          children: /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"inherit\",\n          sx: {\n            ml: 1\n          },\n          onClick: () => {},\n          children: theme.palette.mode === \"dark\" ? /*#__PURE__*/_jsxDEV(Brightness7, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 46\n          }, this) : /*#__PURE__*/_jsxDEV(Brightness4, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 64\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), !isMobile && /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: !isAuthenticated ? /*#__PURE__*/_jsxDEV(Button, {\n            color: \"inherit\",\n            onClick: fetchToken,\n            children: [\"Login \\xA0 \", /*#__PURE__*/_jsxDEV(AccountCircle, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            color: \"inherit\",\n            component: Link,\n            to: `/profile/:id`,\n            className: classes.linkButton,\n            onClick: () => {},\n            children: [!isMobile && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: \" My Movies \\xA0\"\n            }, void 0, false), /*#__PURE__*/_jsxDEV(Avatar, {\n              style: {\n                width: 30,\n                height: 30\n              },\n              alt: \"Profile\",\n              src: \"https://cdn.pixabay.com/photo/2016/08/08/09/17/avatar-1577909_1280.png\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), isMobile && /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: classes.drawer,\n        children: isMobile ? /*#__PURE__*/_jsxDEV(Drawer, {\n          variant: \"temporary\",\n          anchor: \"right\",\n          open: mobileOpen,\n          onClose: () => setMobileOpen(prevMobileOpen => !prevMobileOpen),\n          classes: {\n            paper: classes.drawerPaper\n          },\n          ModelProps: {\n            keepMounted: true\n          },\n          children: /*#__PURE__*/_jsxDEV(Sidebar, {\n            setMobileOpen: setMobileOpen\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Drawer, {\n          classes: {\n            paper: classes.drawerPaper\n          },\n          variant: \"permanent\",\n          open: true,\n          children: /*#__PURE__*/_jsxDEV(Sidebar, {\n            setMobileOpen: setMobileOpen\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(NavBar, \"dNXOjwzWaeChfphMFTSPkJXhIOw=\", false, function () {\n  return [useStyles, useMediaQuery, useTheme];\n});\n\n_c = NavBar;\nexport default NavBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"sources":["C:/Users/HP/Downloads/filmpire-l2-forked/src/components/NavBar/NavBar.jsx"],"names":["React","useEffect","useState","AppBar","IconButton","Toolbar","Drawer","Button","Avatar","useMediaQuery","Menu","AccountCircle","Brightness4","Brightness7","Link","useTheme","Sidebar","Search","fetchToken","createSessionId","moviesApi","useStyles","NavBar","mobileOpen","setMobileOpen","classes","isMobile","theme","isAuthenticated","token","localStorage","getItem","sessionIdFromLocalStorage","logInUser","data","userData","get","sessionId","toolbar","outline","prevMobileOpen","menuButton","ml","palette","mode","linkButton","width","height","drawer","paper","drawerPaper","keepMounted"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { AppBar, IconButton, Toolbar, Drawer, Button, Avatar, useMediaQuery } from \"@mui/material\";\nimport { Menu, AccountCircle, Brightness4, Brightness7 } from \"@mui/icons-material\";\nimport { Link } from \"react-router-dom\";\nimport { useTheme } from \"@mui/material/styles\";\n\nimport { Sidebar } from \"..\";\nimport { Search } from \"..\";\nimport { fetchToken, createSessionId, moviesApi } from \"../../utils\";\nimport useStyles from \"./styles\";\n\nconst NavBar = () => {\n  const [mobileOpen, setMobileOpen] = useState(false);\n  const classes = useStyles();\n  const isMobile = useMediaQuery(\"(max-width:600px)\");\n  const theme = useTheme();\n  const isAuthenticated = false;\n\n  const token = localStorage.getItem(\"request_token\");\n  const sessionIdFromLocalStorage = localStorage.getItem(\"session_id\");\n\n  useEffect(() => {\n    const logInUser = async () => {\n      if (token) {\n        if (sessionIdFromLocalStorage) {\n          const { data: userData } = await moviesApi.get(`/account?session_id=${sessionIdFromLocalStorage}`);\n        } else {\n          const sessionId = await createSessionId();\n\n          const { data: userData } = await moviesApi.get(`/account?session_id=${sessionId}`);\n        }\n      }\n    };\n  }, [token]);\n\n  return (\n    <>\n      <AppBar position=\"fixed\">\n        <Toolbar className={classes.toolbar}>\n          {isMobile && (\n            <IconButton color=\"inherit\" edge=\"start\" style={{ outline: \"none\" }} onClick={() => setMobileOpen((prevMobileOpen) => !prevMobileOpen)} className={classes.menuButton}>\n              <Menu />\n            </IconButton>\n          )}\n          <IconButton color=\"inherit\" sx={{ ml: 1 }} onClick={() => {}}>\n            {theme.palette.mode === \"dark\" ? <Brightness7 /> : <Brightness4 />}\n          </IconButton>\n          {!isMobile && <Search />}\n          <div>\n            {!isAuthenticated ? (\n              <Button color=\"inherit\" onClick={fetchToken}>\n                Login &nbsp; <AccountCircle />\n              </Button>\n            ) : (\n              <Button color=\"inherit\" component={Link} to={`/profile/:id`} className={classes.linkButton} onClick={() => {}}>\n                {!isMobile && <> My Movies &nbsp;</>}\n                <Avatar style={{ width: 30, height: 30 }} alt=\"Profile\" src=\"https://cdn.pixabay.com/photo/2016/08/08/09/17/avatar-1577909_1280.png\" />\n              </Button>\n            )}\n          </div>\n          {isMobile && <Search />}\n        </Toolbar>\n      </AppBar>\n      <div>\n        <nav className={classes.drawer}>\n          {isMobile ? (\n            <Drawer variant=\"temporary\" anchor=\"right\" open={mobileOpen} onClose={() => setMobileOpen((prevMobileOpen) => !prevMobileOpen)} classes={{ paper: classes.drawerPaper }} ModelProps={{ keepMounted: true }}>\n              <Sidebar setMobileOpen={setMobileOpen}></Sidebar>\n            </Drawer>\n          ) : (\n            <Drawer classes={{ paper: classes.drawerPaper }} variant=\"permanent\" open>\n              <Sidebar setMobileOpen={setMobileOpen}></Sidebar>\n            </Drawer>\n          )}\n        </nav>\n      </div>\n    </>\n  );\n};\n\nexport default NavBar;\n"]},"metadata":{},"sourceType":"module"}