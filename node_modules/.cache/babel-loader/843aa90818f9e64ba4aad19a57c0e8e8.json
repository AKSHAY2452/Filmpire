{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Downloads\\\\filmpire-l2-forked\\\\src\\\\components\\\\MovieInformation\\\\MovieInformation.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Modal, Typography, Button, ButtonGroup, Grid, useMediaQuery, Box, CircularProgress, Rating } from \"@mui/material\";\nimport { Movie as MovieIcon, Theaters, Language, PlusOne, Favorite, FavoriteBorderOutlined, Remove, ArrowBack } from \"@mui/icons-material\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { selectGenreOrCategory } from \"../../features/currentGenreOrCategory\";\nimport useStyles from \"./styles\";\nimport { useGetMovieQuery, useGetRecommendationsQuery, useGetListQuery } from \"../../services/TMDB\";\nimport genreIcons from \"../../assets/genres\";\nimport { MovieList } from \"..\";\nimport { userSelector } from \"../../features/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieInformation = () => {\n  _s();\n\n  var _data$genres, _data$videos, _data$videos$results;\n\n  const {\n    genreIdOrCategoryName\n  } = useSelector(state => state.currentGenreOrCategory);\n  const {\n    user\n  } = useSelector(userSelector);\n  const {\n    id\n  } = useParams();\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [open, setOpen] = useState(false);\n  const {\n    data,\n    isFetching,\n    error\n  } = useGetMovieQuery(id);\n  const {\n    data: favoriteMovies\n  } = useGetListQuery({\n    listName: \"favorite/movies\",\n    accountId: user.id,\n    sessionId: localStorage.getItem(\"session_id\"),\n    page: 1\n  });\n  const {\n    data: watchlistMovies\n  } = useGetListQuery({\n    listName: \"watchlist/movies\",\n    accountId: user.id,\n    sessionId: localStorage.getItem(\"session_id\"),\n    page: 1\n  });\n  const {\n    data: recommendations,\n    isFetching: isRecommendationsFetching\n  } = useGetRecommendationsQuery({\n    list: \"/recommendations\",\n    movie_id: id\n  });\n  const [isMovieFavorited, setIsMovieFavorited] = useState(false);\n  const [isMovieWatchlisted, setIsMovieWatchlisted] = useState(false);\n  useEffect(() => {\n    var _favoriteMovies$resul;\n\n    setIsMovieFavorited(!!(favoriteMovies === null || favoriteMovies === void 0 ? void 0 : (_favoriteMovies$resul = favoriteMovies.results) === null || _favoriteMovies$resul === void 0 ? void 0 : _favoriteMovies$resul.find(movie => (movie === null || movie === void 0 ? void 0 : movie.id) === (data === null || data === void 0 ? void 0 : data.id))));\n  }, [favoriteMovies, data]);\n  useEffect(() => {\n    var _watchlistMovies$resu;\n\n    setIsMovieWatchlisted(!!(watchlistMovies === null || watchlistMovies === void 0 ? void 0 : (_watchlistMovies$resu = watchlistMovies.results) === null || _watchlistMovies$resu === void 0 ? void 0 : _watchlistMovies$resu.find(movie => (movie === null || movie === void 0 ? void 0 : movie.id) === (data === null || data === void 0 ? void 0 : data.id))));\n  }, [watchlistMovies, data]);\n\n  const addToFavorites = async () => {\n    await axios.post(`https://api.themoviedb.org/3/account/${user.id}/favorite?api_key=${process.env.REACT_APP_TMDB_KEY}&session_id=${localStorage.getItem(\"session_id\")}`, {\n      media_type: \"movie\",\n      media_id: id,\n      favorite: !isMovieFavorited\n    });\n    setIsMovieFavorited(prev => !prev);\n  };\n\n  console.log({\n    isMovieWatchlisted\n  });\n\n  const addToWatchlist = async () => {\n    await axios.post(`https://api.themoviedb.org/3/account/${user.id}/watchlist?api_key=${process.env.REACT_APP_TMDB_KEY}&session_id=${localStorage.getItem(\"session_id\")}`, {\n      media_type: \"movie\",\n      media_id: id,\n      watchlist: !isMovieWatchlisted\n    });\n    setIsMovieWatchlisted(prev => !prev);\n  };\n\n  if (isFetching) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: \"8rem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Something is wrong, Go back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: classes.containerSpaceAround,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      sm: 12,\n      lg: 4,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: classes.poster,\n        src: `https://image.tmdb.org/t/p/w500/${data === null || data === void 0 ? void 0 : data.poster_path}`,\n        alt: data === null || data === void 0 ? void 0 : data.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      direction: \"column\",\n      lg: 7,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        align: \"center\",\n        gutterBottom: \"true\",\n        children: [data === null || data === void 0 ? void 0 : data.title, \" (\", data.release_date.split(\"-\")[0], \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        align: \"center\",\n        gutterBottom: \"true\",\n        children: data === null || data === void 0 ? void 0 : data.tagline\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        className: classes.containerSpaceAround,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Rating, {\n            readOnly: true,\n            value: data.vote_average / 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h9\",\n            gutterBottom: \"true\",\n            style: {\n              marginleft: \"10px\"\n            },\n            children: [data === null || data === void 0 ? void 0 : data.vote_average, \" / 10\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          align: \"center\",\n          gutterBottom: \"true\",\n          children: [data === null || data === void 0 ? void 0 : data.runtime, \"min | Language: \", data === null || data === void 0 ? void 0 : data.spoken_languages[0].name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        className: classes.genresContainer,\n        children: data === null || data === void 0 ? void 0 : (_data$genres = data.genres) === null || _data$genres === void 0 ? void 0 : _data$genres.map(genre => /*#__PURE__*/_jsxDEV(Link, {\n          className: classes.links,\n          to: \"/\",\n          onClick: () => dispatch(selectGenreOrCategory(genre.id)),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: genreIcons[genre.name.toLowerCase()],\n            alt: \"\",\n            className: classes.genreImage,\n            height: 30\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textPrimary\",\n            variant: \"subtitle1\",\n            children: genre === null || genre === void 0 ? void 0 : genre.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)]\n        }, genre.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        style: {\n          marginTop: \"10px\"\n        },\n        children: \"Overview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        style: {\n          marginBottom: \"2rem\"\n        },\n        children: data === null || data === void 0 ? void 0 : data.overview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"Top Cast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        spacing: 2,\n        children: data && data.credits.cast.map((character, i) => character.profile_path && /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          md: 2,\n          component: Link,\n          to: `/actors/${character.id}`,\n          style: {\n            textDecoration: \"none\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: classes.castImage,\n            src: `https://image.tmdb.org/t/p/w500/${character.profile_path}`,\n            alt: character.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textPrimary\",\n            children: character === null || character === void 0 ? void 0 : character.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textSecondary\",\n            children: character.character.split(\"/\")[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 23\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)).slice(0, 6)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        style: {\n          marginTop: \"2rem\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.buttonsContainer,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            className: classes.buttonsContainer,\n            children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n              size: \"small\",\n              variant: \"outlined\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                href: data === null || data === void 0 ? void 0 : data.homepage,\n                endIcon: /*#__PURE__*/_jsxDEV(Language, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 98\n                }, this),\n                children: \"Website\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                href: `https://www.imdb.com/title/${data === null || data === void 0 ? void 0 : data.imdb_id}`,\n                endIcon: /*#__PURE__*/_jsxDEV(MovieIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 129\n                }, this),\n                children: \"IMDB\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => setOpen(true),\n                href: \"#\",\n                endIcon: /*#__PURE__*/_jsxDEV(Theaters, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 73\n                }, this),\n                children: \"Trailer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            className: classes.buttonsContainer,\n            children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n              size: \"small\",\n              variant: \"outlined\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: addToFavorites,\n                endIcon: isMovieFavorited ? /*#__PURE__*/_jsxDEV(FavoriteBorderOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 78\n                }, this) : /*#__PURE__*/_jsxDEV(Favorite, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 107\n                }, this),\n                children: isMovieFavorited ? \"Unfavorite\" : \"Favorite\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: addToWatchlist,\n                endIcon: isMovieWatchlisted ? /*#__PURE__*/_jsxDEV(Remove, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 80\n                }, this) : /*#__PURE__*/_jsxDEV(PlusOne, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 93\n                }, this),\n                children: \"Watchlist\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                endIcon: /*#__PURE__*/_jsxDEV(ArrowBack, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 34\n                }, this),\n                sx: {\n                  borderColor: \"primary.main\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  style: {\n                    textDecoration: \"none\"\n                  },\n                  component: Link,\n                  to: \"/\",\n                  color: \"inherit\",\n                  variant: \"subtitle2\",\n                  children: \"Back\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      marginTop: \"5rem\",\n      width: \"100%\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        align: \"center\",\n        children: \"You Might Also Like\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), recommendations ? /*#__PURE__*/_jsxDEV(MovieList, {\n        movies: recommendations,\n        numberOfMovies: 8\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 28\n      }, this) : /*#__PURE__*/_jsxDEV(Box, {\n        children: \"SORRY, NOTHING WAS FOUND \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 88\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      closeAfterTransition: true,\n      className: classes.modal,\n      open: open,\n      onClose: () => setOpen(false),\n      children: (data === null || data === void 0 ? void 0 : (_data$videos = data.videos) === null || _data$videos === void 0 ? void 0 : (_data$videos$results = _data$videos.results) === null || _data$videos$results === void 0 ? void 0 : _data$videos$results.length) > 0 && /*#__PURE__*/_jsxDEV(\"iframe\", {\n        autoPlay: true,\n        className: classes.video,\n        frameBorder: \"0\",\n        title: \"Trailer\",\n        src: `https://www.youtube.com/embed/${data.videos.results[0].key}`,\n        allow: \"autoplay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 47\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MovieInformation, \"rIFExlYxhgMuy0j4yQu/bWMasro=\", false, function () {\n  return [useSelector, useSelector, useParams, useStyles, useDispatch, useGetMovieQuery, useGetListQuery, useGetListQuery, useGetRecommendationsQuery];\n});\n\n_c = MovieInformation;\nexport default MovieInformation;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieInformation\");","map":{"version":3,"sources":["C:/Users/HP/Downloads/filmpire-l2-forked/src/components/MovieInformation/MovieInformation.jsx"],"names":["React","useState","useEffect","Modal","Typography","Button","ButtonGroup","Grid","useMediaQuery","Box","CircularProgress","Rating","Movie","MovieIcon","Theaters","Language","PlusOne","Favorite","FavoriteBorderOutlined","Remove","ArrowBack","Link","useParams","useDispatch","useSelector","axios","selectGenreOrCategory","useStyles","useGetMovieQuery","useGetRecommendationsQuery","useGetListQuery","genreIcons","MovieList","userSelector","MovieInformation","genreIdOrCategoryName","state","currentGenreOrCategory","user","id","classes","dispatch","open","setOpen","data","isFetching","error","favoriteMovies","listName","accountId","sessionId","localStorage","getItem","page","watchlistMovies","recommendations","isRecommendationsFetching","list","movie_id","isMovieFavorited","setIsMovieFavorited","isMovieWatchlisted","setIsMovieWatchlisted","results","find","movie","addToFavorites","post","process","env","REACT_APP_TMDB_KEY","media_type","media_id","favorite","prev","console","log","addToWatchlist","watchlist","containerSpaceAround","poster","poster_path","title","release_date","split","tagline","vote_average","marginleft","runtime","spoken_languages","name","genresContainer","genres","map","genre","links","toLowerCase","genreImage","marginTop","marginBottom","overview","credits","cast","character","i","profile_path","textDecoration","castImage","slice","buttonsContainer","homepage","imdb_id","borderColor","modal","videos","length","video","key"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Modal, Typography, Button, ButtonGroup, Grid, useMediaQuery, Box, CircularProgress, Rating } from \"@mui/material\";\nimport { Movie as MovieIcon, Theaters, Language, PlusOne, Favorite, FavoriteBorderOutlined, Remove, ArrowBack } from \"@mui/icons-material\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"axios\";\n\nimport { selectGenreOrCategory } from \"../../features/currentGenreOrCategory\";\nimport useStyles from \"./styles\";\nimport { useGetMovieQuery, useGetRecommendationsQuery, useGetListQuery } from \"../../services/TMDB\";\nimport genreIcons from \"../../assets/genres\";\nimport { MovieList } from \"..\";\nimport { userSelector } from \"../../features/auth\";\n\nconst MovieInformation = () => {\n  const { genreIdOrCategoryName } = useSelector((state) => state.currentGenreOrCategory);\n  const { user } = useSelector(userSelector);\n  const { id } = useParams();\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [open, setOpen] = useState(false);\n\n  const { data, isFetching, error } = useGetMovieQuery(id);\n  const { data: favoriteMovies } = useGetListQuery({ listName: \"favorite/movies\", accountId: user.id, sessionId: localStorage.getItem(\"session_id\"), page: 1 });\n  const { data: watchlistMovies } = useGetListQuery({ listName: \"watchlist/movies\", accountId: user.id, sessionId: localStorage.getItem(\"session_id\"), page: 1 });\n  const { data: recommendations, isFetching: isRecommendationsFetching } = useGetRecommendationsQuery({ list: \"/recommendations\", movie_id: id });\n\n  const [isMovieFavorited, setIsMovieFavorited] = useState(false);\n  const [isMovieWatchlisted, setIsMovieWatchlisted] = useState(false);\n\n  useEffect(() => {\n    setIsMovieFavorited(!!favoriteMovies?.results?.find((movie) => movie?.id === data?.id));\n  }, [favoriteMovies, data]);\n\n  useEffect(() => {\n    setIsMovieWatchlisted(!!watchlistMovies?.results?.find((movie) => movie?.id === data?.id));\n  }, [watchlistMovies, data]);\n\n  const addToFavorites = async () => {\n    await axios.post(`https://api.themoviedb.org/3/account/${user.id}/favorite?api_key=${process.env.REACT_APP_TMDB_KEY}&session_id=${localStorage.getItem(\"session_id\")}`, {\n      media_type: \"movie\",\n      media_id: id,\n      favorite: !isMovieFavorited,\n    });\n\n    setIsMovieFavorited((prev) => !prev);\n  };\n\n  console.log({ isMovieWatchlisted });\n\n  const addToWatchlist = async () => {\n    await axios.post(`https://api.themoviedb.org/3/account/${user.id}/watchlist?api_key=${process.env.REACT_APP_TMDB_KEY}&session_id=${localStorage.getItem(\"session_id\")}`, {\n      media_type: \"movie\",\n      media_id: id,\n      watchlist: !isMovieWatchlisted,\n    });\n\n    setIsMovieWatchlisted((prev) => !prev);\n  };\n\n  if (isFetching) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n        <CircularProgress size=\"8rem\" />\n      </Box>\n    );\n  }\n  if (error) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n        <Link to=\"/\">Something is wrong, Go back</Link>\n      </Box>\n    );\n  }\n\n  return (\n    <Grid container className={classes.containerSpaceAround}>\n      <Grid item sm={12} lg={4}>\n        <img className={classes.poster} src={`https://image.tmdb.org/t/p/w500/${data?.poster_path}`} alt={data?.title} />\n      </Grid>\n      <Grid item container direction=\"column\" lg={7}>\n        <Typography variant=\"h4\" align=\"center\" gutterBottom=\"true\">\n          {data?.title} ({data.release_date.split(\"-\")[0]})\n        </Typography>\n        <Typography variant=\"h5\" align=\"center\" gutterBottom=\"true\">\n          {data?.tagline}\n        </Typography>\n        <Grid item className={classes.containerSpaceAround}>\n          <Box>\n            <Rating readOnly value={data.vote_average / 2} />\n            <Typography variant=\"h9\" gutterBottom=\"true\" style={{ marginleft: \"10px\" }}>\n              {data?.vote_average} / 10\n            </Typography>\n          </Box>\n          <Typography variant=\"h6\" align=\"center\" gutterBottom=\"true\">\n            {data?.runtime}min | Language: {data?.spoken_languages[0].name}\n          </Typography>\n        </Grid>\n        <Grid item className={classes.genresContainer}>\n          {data?.genres?.map((genre) => (\n            <Link key={genre.name} className={classes.links} to=\"/\" onClick={() => dispatch(selectGenreOrCategory(genre.id))}>\n              <img src={genreIcons[genre.name.toLowerCase()]} alt=\"\" className={classes.genreImage} height={30} />\n              <Typography color=\"textPrimary\" variant=\"subtitle1\">\n                {genre?.name}\n              </Typography>\n            </Link>\n          ))}\n        </Grid>\n        <Typography variant=\"h5\" gutterBottom style={{ marginTop: \"10px\" }}>\n          Overview\n        </Typography>\n        <Typography style={{ marginBottom: \"2rem\" }}>{data?.overview}</Typography>\n        <Typography variant=\"h5\" gutterBottom>\n          Top Cast\n        </Typography>\n        <Grid item container spacing={2}>\n          {data &&\n            data.credits.cast\n              .map(\n                (character, i) =>\n                  character.profile_path && (\n                    <Grid key={i} item xs={4} md={2} component={Link} to={`/actors/${character.id}`} style={{ textDecoration: \"none\" }}>\n                      <img className={classes.castImage} src={`https://image.tmdb.org/t/p/w500/${character.profile_path}`} alt={character.name} />\n                      <Typography color=\"textPrimary\">{character?.name}</Typography>\n                      <Typography color=\"textSecondary\">{character.character.split(\"/\")[0]}</Typography>\n                    </Grid>\n                  )\n              )\n              .slice(0, 6)}\n        </Grid>\n        <Grid item container style={{ marginTop: \"2rem\" }}>\n          <div className={classes.buttonsContainer}>\n            <Grid item xs={12} sm={6} className={classes.buttonsContainer}>\n              <ButtonGroup size=\"small\" variant=\"outlined\">\n                <Button target=\"_blank\" rel=\"noopener noreferrer\" href={data?.homepage} endIcon={<Language />}>\n                  Website\n                </Button>\n                <Button target=\"_blank\" rel=\"noopener noreferrer\" href={`https://www.imdb.com/title/${data?.imdb_id}`} endIcon={<MovieIcon />}>\n                  IMDB\n                </Button>\n                <Button onClick={() => setOpen(true)} href=\"#\" endIcon={<Theaters />}>\n                  Trailer\n                </Button>\n              </ButtonGroup>\n            </Grid>\n            <Grid item xs={12} sm={6} className={classes.buttonsContainer}>\n              <ButtonGroup size=\"small\" variant=\"outlined\">\n                <Button onClick={addToFavorites} endIcon={isMovieFavorited ? <FavoriteBorderOutlined /> : <Favorite />}>\n                  {isMovieFavorited ? \"Unfavorite\" : \"Favorite\"}\n                </Button>\n                <Button onClick={addToWatchlist} endIcon={isMovieWatchlisted ? <Remove /> : <PlusOne />}>\n                  Watchlist\n                </Button>\n                <Button endIcon={<ArrowBack />} sx={{ borderColor: \"primary.main\" }}>\n                  <Typography style={{ textDecoration: \"none\" }} component={Link} to=\"/\" color=\"inherit\" variant=\"subtitle2\">\n                    Back\n                  </Typography>\n                </Button>\n              </ButtonGroup>\n            </Grid>\n          </div>\n        </Grid>\n      </Grid>\n      <Box marginTop=\"5rem\" width=\"100%\">\n        <Typography variant=\"h4\" gutterBottom align=\"center\">\n          You Might Also Like\n        </Typography>\n        {recommendations ? <MovieList movies={recommendations} numberOfMovies={8} /> : <Box>SORRY, NOTHING WAS FOUND </Box>}\n      </Box>\n      <Modal closeAfterTransition className={classes.modal} open={open} onClose={() => setOpen(false)}>\n        {data?.videos?.results?.length > 0 && <iframe autoPlay className={classes.video} frameBorder=\"0\" title=\"Trailer\" src={`https://www.youtube.com/embed/${data.videos.results[0].key}`} allow=\"autoplay\" />}\n      </Modal>\n    </Grid>\n  );\n};\n\nexport default MovieInformation;\n"]},"metadata":{},"sourceType":"module"}